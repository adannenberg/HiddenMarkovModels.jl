var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = HiddenMarkovModels","category":"page"},{"location":"#HiddenMarkovModels","page":"Home","title":"HiddenMarkovModels","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for HiddenMarkovModels.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [HiddenMarkovModels]","category":"page"},{"location":"#HiddenMarkovModels.HiddenMarkovModels","page":"Home","title":"HiddenMarkovModels.HiddenMarkovModels","text":"HiddenMarkovModels\n\nA Julia package for HMM modeling, simulation, inference and learning.\n\n\n\n\n\n","category":"module"},{"location":"#HiddenMarkovModels.backward!-Tuple{Matrix, Matrix, Vector, Any, Any}","page":"Home","title":"HiddenMarkovModels.backward!","text":"backward!(β, Bβ, c, A, B)\n\nPerform a backward pass by mutating β and Bβ (after forward pass).\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.baum_welch!-Tuple{HiddenMarkovModel, Vector}","page":"Home","title":"HiddenMarkovModels.baum_welch!","text":"baum_welch(hmm::HMM, obs_seqs; max_iterations, rtol)\n\nApply the Baum-Welch algorithm on multiple observation sequences, starting from an initial estimate hmm.\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.forward!-Tuple{Matrix, Vector, Any, Any, Any}","page":"Home","title":"HiddenMarkovModels.forward!","text":"forward!(α, c, p, A, B)\n\nPerform a forward pass by mutating α and c.\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.forward_backward!-Tuple{Matrix, Vector, Matrix, Matrix, Matrix, Array{<:Any, 3}, Any, Any, Any}","page":"Home","title":"HiddenMarkovModels.forward_backward!","text":"forward_backward!(α, c, β, Bβ, γ, ξ, p, A, B)\n\nApply the full forward-backward algorithm by mutating α, c, β, Bβ, γ and ξ.\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.is_prob_vec-Tuple{AbstractVector}","page":"Home","title":"HiddenMarkovModels.is_prob_vec","text":"is_prob_vec(p; rtol)\n\nCheck if p is a probability distribution vector.\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.is_square-Tuple{AbstractMatrix}","page":"Home","title":"HiddenMarkovModels.is_square","text":"is_square(A)\n\nCheck if A is a square matrix.\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.is_trans_mat-Tuple{AbstractMatrix}","page":"Home","title":"HiddenMarkovModels.is_trans_mat","text":"is_trans_mat(A; rtol)\n\nCheck if A is a transition matrix.\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.marginals!-Tuple{Matrix, Array, Matrix, Matrix, Matrix, Any}","page":"Home","title":"HiddenMarkovModels.marginals!","text":"marginals!(γ, ξ, α, β, Bβ, A)\n\nCompute state and transition marginals by mutating γ and ξ (after forward and backward passes).\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.rand_prob_vec-Tuple{Random.AbstractRNG, Any}","page":"Home","title":"HiddenMarkovModels.rand_prob_vec","text":"rand_prob_vec(rng, N)\nrand_prob_vec(N)\n\nGenerate a random probability distribution vector of length N.\n\n\n\n\n\n","category":"method"},{"location":"#HiddenMarkovModels.rand_trans_mat-Tuple{Random.AbstractRNG, Any}","page":"Home","title":"HiddenMarkovModels.rand_trans_mat","text":"rand_trans_mat(rng, N)\nrand_trans_mat(N)\n\nGenerate a random transition matrix of size N × N.\n\n\n\n\n\n","category":"method"}]
}
